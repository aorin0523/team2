version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./.env
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - ./db/data:/var/lib/mysql
      - ./db/config:/etc/mysql/conf.d/my.cnf
      - ./db/init:/docker-entrypoint-initdb.d

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
    volumes:
      - ./minio/data:/data

  minio-cli:
    image: minio/mc:latest
    container_name: minio-cli
    depends_on:
      - minio
    entrypoint: >
      sh -c "
      sleep 10 &&
      mc alias set myminio http://minio:9000 admin password &&
      tail -f /dev/null
      "

  minio-init: 
    image: minio/mc:latest
    container_name: minio-init
    depends_on:
      - minio
    volumes:
      - ./minio/config:/config
    entrypoint: >
      sh -c "
      sleep 10 &&
      mc alias set myminio http://minio:9000 admin password &&
      mc mb --ignore-existing myminio/storage &&
      mc anonymous set public myminio/storage &&
      mc mb --ignore-existing myminio/temp &&
      mc anonymous set upload myminio/temp &&
      mc ilm import myminio/temp < /config/lifecycle.json
      "
